{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000';\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState({\n    text: '',\n    userId: '1',\n    createdAt: '',\n    updatedAt: ''\n  });\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/comments`);\n        setComments(response.data);\n        console.log(response.data);\n      } catch (err) {\n        setError('Failed to fetch comments');\n        console.error(err);\n      }\n    };\n    fetchComments();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCreateComment = async () => {\n    if (!newComment.text) {\n      setError('Comment is required');\n      return;\n    }\n    try {\n      const response = await axios.post(`${BASE_URL}/comments`, newComment);\n      setComments([...comments, response.data]);\n      setNewComment({\n        text: '',\n        userId: '1',\n        createdAt: '',\n        updatedAt: ''\n      });\n    } catch (err) {\n      setError('Failed to create comment');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Enter your comment\",\n      value: newComment.text,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      name: \"createdAt\",\n      value: newComment.createdAt,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      name: \"updatedAt\",\n      value: newComment.updatedAt,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateComment,\n      children: \"Create Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      cellSpacing: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(comment.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(comment.updatedAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(`Edit comment ${comment.id}`),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(`Delete comment ${comment.id}`),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"ePits3zDYpML8KPZE/U6eQUZix4=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BASE_URL","Comments","_s","comments","setComments","error","setError","newComment","setNewComment","text","userId","createdAt","updatedAt","fetchComments","response","get","data","console","log","err","handleInputChange","e","name","value","target","prev","handleCreateComment","post","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","style","color","border","cellPadding","cellSpacing","map","comment","id","Date","toLocaleString","alert","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\nfunction Comments() {\r\n    const [comments, setComments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [newComment, setNewComment] = useState({\r\n        text: '',\r\n        userId: '1',\r\n        createdAt: '',\r\n        updatedAt: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchComments = async () => {\r\n            try {\r\n                const response = await axios.get(`${BASE_URL}/comments`);\r\n                setComments(response.data);\r\n                console.log(response.data); \r\n            } catch (err) {\r\n                setError('Failed to fetch comments');\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewComment(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleCreateComment = async () => {\r\n        if (!newComment.text) {\r\n            setError('Comment is required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/comments`, newComment);\r\n            setComments([...comments, response.data]);\r\n            setNewComment({\r\n                text: '',\r\n                userId: '1',\r\n                createdAt: '',\r\n                updatedAt: ''\r\n            });\r\n        } catch (err) {\r\n            setError('Failed to create comment');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create Comment</h3>\r\n            <input\r\n                type=\"text\"\r\n                name=\"text\"\r\n                placeholder=\"Enter your comment\"\r\n                value={newComment.text}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type=\"datetime-local\"\r\n                name=\"createdAt\"\r\n                value={newComment.createdAt}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type=\"datetime-local\"\r\n                name=\"updatedAt\"\r\n                value={newComment.updatedAt}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button onClick={handleCreateComment}>Create Comment</button>\r\n\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Text</th>\r\n                        <th>User ID</th>\r\n                        <th>Created At</th>\r\n                        <th>Updated At</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {comments.map((comment) => (\r\n                        <tr key={comment.id}>\r\n                            <td>{comment.id}</td>\r\n                            <td>{comment.text}</td>\r\n                            <td>{comment.userId}</td>\r\n                            <td>{new Date(comment.createdAt).toLocaleString()}</td>\r\n                            <td>{new Date(comment.updatedAt).toLocaleString()}</td>\r\n                            <td>\r\n                                <button onClick={() => alert(`Edit comment ${comment.id}`)}>Edit</button>\r\n                                <button onClick={() => alert(`Delete comment ${comment.id}`)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}