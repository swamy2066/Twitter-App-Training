{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000';\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async postId => {\n      const id = 1;\n      try {\n        const response = await axios.get(`${BASE_URL}/posts/${postId}`);\n        setPosts(posts.filter(post => post.id !== postId));\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), post.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      cellSpacing: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: post.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(post.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(post.updatedAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"nhrma49/QJ129a5/QXXmcwTuFYU=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","BASE_URL","PostDetail","_s","id","post","setPost","error","setError","fetchPosts","postId","response","get","setPosts","posts","filter","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","cellSpacing","map","title","description","userId","Date","createdAt","toLocaleString","updatedAt","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\nconst PostDetail = () => {\r\n  const { id } = useParams(); \r\n  const [post, setPost] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async (postId) => {\r\n        const id = 1;\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}/posts/${postId}`);\r\n            setPosts(posts.filter(post => post.id !== postId)); \r\n        } catch (err) {\r\n            setError('Failed to fetch posts');\r\n            console.error(err);\r\n            \r\n        }\r\n    };\r\n\r\n    fetchPosts();\r\n    \r\n}, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    {error && <div>{error}</div>}\r\n\r\n    {post.length > 0 ? (\r\n        <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Title</th>\r\n                    <th>Description</th>\r\n                    <th>User ID</th>\r\n                    <th>Created At</th>\r\n                    <th>Updated At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {post.map((post) => (\r\n                    <tr key={post.id}>\r\n                        <td>{post.id}</td>\r\n                        <td>{post.title}</td>\r\n                        <td>{post.description}</td>\r\n                        <td>{post.userId}</td>\r\n                        <td>{new Date(post.createdAt).toLocaleString()}</td>\r\n                        <td>{new Date(post.updatedAt).toLocaleString()}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    ) : (\r\n        <div>No posts available</div>\r\n    )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}