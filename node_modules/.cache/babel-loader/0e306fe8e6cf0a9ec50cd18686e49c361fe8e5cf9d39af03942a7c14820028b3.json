{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faInfoCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import axios from \"../service/axios\";\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%]).{8,24}$/;\n\n//const REGISTER_URL = 'http://localhost:5000/users';\n\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [name, setName] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  //const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(name);\n    console.log(result);\n    console.log(name);\n    setValidName(result);\n  }, [name]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(password);\n    console.log(result);\n    console.log(password);\n    setValidPwd(result);\n    const match = password === matchPwd;\n    setValidMatch(match);\n  }, [password, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [name, password, matchPwd]);\n\n  //  const handleSubmit =  async (e) => {\n  //           e.preventDefault();\n\n  //         const v1 = USER_REGEX.test(name);\n  //         const v2 = PWD_REGEX.test(password);\n  //         if (!v1 || !v2) {\n  //             setErrMsg(\"Invalid Entry\");\n  //             return;\n  //         }\n  //         try {\n  //             const response = await axios.post(REGISTER_URL, JSON.stringify({ name, password }),\n\n  //            {\n  //                headers: {'Content-Type': 'application/json'},\n  //                 withCredentials: true \n  //            }\n\n  //         );\n  //          console.log(response.data);\n  //          console.log(response.accessToken);\n  //          console.log(JSON.stringify(response))\n\n  //         } catch (err){\n  //              if (!err?.response) {\n  //                 setErrMsg('No Server Response');\n  //              } else if (err.response?.status === 409 )\n  //                 setErrMsg('Username Taken');\n  //                 else {\n  //                     setErrMsg('Registration Failed');\n\n  //         }\n  //     }\n\n  //  }\n\n  const handleSubmit = e => {\n    e.preventdefault();\n    let regobj = {\n      name,\n      password\n    };\n    //    console.log(regobj);\n\n    fetch(\"http://localhost:5000/users\", {\n      method: \"post\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(regobj)\n    }).then(res => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName || !name ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: name,\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setName(e.target.value),\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\",\n        \"aria-describedby\": \"uidnote\",\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && name && !validName ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 40\n        }, this), \"Must Begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 46\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd || !password ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        \"aria-invalid\": validPwd ? \"false\" : \"true\",\n        \"aria-describedby\": \"pwdnote\",\n        onFocus: () => setPwdFocus(true),\n        onBlur: () => setPwdFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: pwdFocus && name && !validPwd ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 40\n        }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 100\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm_pwd\",\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch && matchPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm_pwd\",\n        value: matchPwd,\n        onChange: e => setMatchPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validMatch ? \"false\" : \"true\",\n        \"aria-describedby\": \"confirmnote\",\n        onFocus: () => setMatchFocus(true),\n        onBlur: () => setMatchFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"confirmnote\",\n        className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), \"Must match the  above password input field\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !validName || !validPwd || !validMatch ? true : false,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"kC0DFjLnhq2x9YupYcVcwijzWpo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faInfoCircle","faTimes","FontAwesomeIcon","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Register","_s","userRef","errRef","name","setName","validName","setValidName","userFocus","setUserFocus","password","setPassword","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","current","focus","result","test","console","log","match","handleSubmit","e","preventdefault","regobj","fetch","method","headers","body","JSON","stringify","then","res","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","icon","type","id","value","autoComplete","onChange","target","required","onFocus","onBlur","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/Register.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faInfoCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import axios from \"../service/axios\";\r\nimport  './Register.css';\r\n\r\n\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%]).{8,24}$/;\r\n\r\n//const REGISTER_URL = 'http://localhost:5000/users';\r\n\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [name, setName] = useState('')\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    //const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(name);\r\n        console.log(result);\r\n        console.log(name);\r\n        setValidName(result);\r\n    }, [name])\r\n\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(password);\r\n        console.log(result);\r\n        console.log(password);\r\n        setValidPwd(result);\r\n        const match = password === matchPwd;\r\n        setValidMatch(match);\r\n    }, [password, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [name, password, matchPwd])\r\n\r\n    //  const handleSubmit =  async (e) => {\r\n    //           e.preventDefault();\r\n              \r\n    //         const v1 = USER_REGEX.test(name);\r\n    //         const v2 = PWD_REGEX.test(password);\r\n    //         if (!v1 || !v2) {\r\n    //             setErrMsg(\"Invalid Entry\");\r\n    //             return;\r\n    //         }\r\n    //         try {\r\n    //             const response = await axios.post(REGISTER_URL, JSON.stringify({ name, password }),\r\n                 \r\n    //            {\r\n    //                headers: {'Content-Type': 'application/json'},\r\n    //                 withCredentials: true \r\n    //            }\r\n               \r\n    //         );\r\n    //          console.log(response.data);\r\n    //          console.log(response.accessToken);\r\n    //          console.log(JSON.stringify(response))\r\n             \r\n    //         } catch (err){\r\n    //              if (!err?.response) {\r\n    //                 setErrMsg('No Server Response');\r\n    //              } else if (err.response?.status === 409 )\r\n    //                 setErrMsg('Username Taken');\r\n    //                 else {\r\n    //                     setErrMsg('Registration Failed');\r\n\r\n    //         }\r\n    //     }\r\n\r\n    //  }\r\n   \r\n           const handleSubmit = (e) => {\r\n              e.preventdefault();\r\n              let regobj={name, password};\r\n            //    console.log(regobj);\r\n\r\n             fetch(\"http://localhost:5000/users\",{\r\n                method:\"post\",\r\n                headers:{'content-type' : 'application/json'},\r\n                body:JSON.stringify(regobj)\r\n             }).then((res)=>{\r\n                  \r\n             })\r\n\r\n           }\r\n\r\n    return (\r\n        <section>\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">\r\n                    Username:\r\n                    <span className={validName ? \"valid\" : \"hide\"}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </span>\r\n\r\n                    <span className={validName || !name ? \"hide\" : \"invalid\"}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </label>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    value={name}\r\n                    ref={userRef}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                    aria-invalid={validName ? \"false\" : \"true\"}\r\n                    aria-describedby=\"uidnote\"\r\n                    onFocus={() => setUserFocus(true)}\r\n                    onBlur={() => setUserFocus(false)}\r\n                />\r\n                <p id=\"uidnote\" className={userFocus && name && !validName ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    4 to 24 characters.<br />\r\n                    Must Begin with a letter.<br />\r\n                    Letters, numbers, underscores, hyphens allowed.\r\n                </p>\r\n\r\n                <label htmlFor=\"password\">\r\n                    Password:\r\n                    <span className={validPwd ? \"valid\" : \"hide\"}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </span>\r\n\r\n                    <span className={validPwd || !password ? \"hide\" : \"invalid\"}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </label>\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                    aria-describedby=\"pwdnote\"\r\n                    onFocus={() => setPwdFocus(true)}\r\n                    onBlur={() => setPwdFocus(false)}\r\n                />\r\n                <p id=\"pwdnote\" className={pwdFocus && name && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    4 to 24 characters.<br />\r\n                    Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                    Letters, numbers, underscores, hyphens allowed.\r\n                </p>\r\n\r\n                <label htmlFor=\"confirm_pwd\">\r\n                     Confirm Password:\r\n                    <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </span>\r\n\r\n                    <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </label>\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"confirm_pwd\"\r\n                    value={matchPwd}\r\n                    onChange={(e) => setMatchPwd(e.target.value)}\r\n                    required\r\n                    aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                    aria-describedby=\"confirmnote\"\r\n                    onFocus={() => setMatchFocus(true)}\r\n                    onBlur={() => setMatchFocus(false)}\r\n                />\r\n                <p id=\"confirmnote\" className={matchFocus &&  !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                     Must match the  above password input field\r\n                </p>\r\n\r\n                <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n\r\n            </form>\r\n             <p>\r\n                 Already registered? <br />\r\n                  <span className=\"line\">\r\n                     {/*put router link here*/}\r\n                     <a href=\"http://localhost:3000/login\">Sign In</a>\r\n                  </span>\r\n             </p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}