{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  const usenavigate = useNavigate();\n\n  // useEffect(() => {\n  //     userRef.current.focus();\n  // }, [])\n\n  // useEffect(() => {\n  //     setErrMsg('');\n  // }, [username, password])\n\n  // const ProceedLogin = async (e) => {\n  //     e.preventDefault();{\n  //         fetch(\"http://localhost:5000/users/\"+setuserName).then((res) =>{\n  //             return res.json();\n  //          }).then((resp)=>{\n  //              console.log(resp)\n  //              if(Object.keys(resp).length === 0) {\n  //                 toast.error('Please Enter valid username');\n  //              } else {\n  //                 if (resp.password === password) {\n  //                     toast.success('Success');\n  //                     usenavigate('/')\n\n  //                 } else {\n  //                     toast.error('Please Enter valid credentials');\n  //                 }\n\n  //              }\n\n  //          }).catch((err) => {\n  //             toast.error('Login Failed due to :'+err.message);\n  //          });\n  //     }\n  //    }\n\n  const ProceedLogin = async e => {\n    e.preventDefault();\n\n    //const userName = userName; \n\n    fetch(`http://localhost:5000/users/${userName}`).then(res => res.json()).then(resp => {\n      console.log(resp);\n      if (Object.keys(resp).length === 0) {\n        toast.error('Please Enter valid username');\n      } else {\n        if (resp.password === password) {\n          toast.success('Login Success');\n          usenavigate('/');\n        } else {\n          toast.error('Please Enter valid credentials');\n        }\n      }\n    }).catch(err => {\n      toast.error('Login Failed due to: ' + err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are logged in !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/\",\n          children: \"Go to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: ProceedLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUsername(e.target.value),\n          value: username,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !username || !password ? true : false,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/register\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"xccvRvrvdR7xSYTX5R0P+PjQfY4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useContext","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","userRef","errRef","username","setUsername","password","setPassword","errMsg","setErrMsg","success","setSuccess","usenavigate","ProceedLogin","e","preventDefault","fetch","userName","then","res","json","resp","console","log","Object","keys","length","error","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","type","id","autoComplete","onChange","target","value","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/Login.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst Login = () => {\r\n    \r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const usenavigate=useNavigate();\r\n\r\n\r\n    // useEffect(() => {\r\n    //     userRef.current.focus();\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     setErrMsg('');\r\n    // }, [username, password])\r\n\r\n\r\n    // const ProceedLogin = async (e) => {\r\n    //     e.preventDefault();{\r\n    //         fetch(\"http://localhost:5000/users/\"+setuserName).then((res) =>{\r\n    //             return res.json();\r\n    //          }).then((resp)=>{\r\n    //              console.log(resp)\r\n    //              if(Object.keys(resp).length === 0) {\r\n    //                 toast.error('Please Enter valid username');\r\n    //              } else {\r\n    //                 if (resp.password === password) {\r\n    //                     toast.success('Success');\r\n    //                     usenavigate('/')\r\n\r\n    //                 } else {\r\n    //                     toast.error('Please Enter valid credentials');\r\n    //                 }\r\n\r\n    //              }\r\n\r\n    //          }).catch((err) => {\r\n    //             toast.error('Login Failed due to :'+err.message);\r\n    //          });\r\n    //     }\r\n    //    }\r\n\r\n    const ProceedLogin = async (e) => {\r\n        e.preventDefault();\r\n    \r\n       \r\n        //const userName = userName; \r\n        \r\n       \r\n        fetch(`http://localhost:5000/users/${userName}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                console.log(resp);\r\n    \r\n                \r\n                if (Object.keys(resp).length === 0) {\r\n                    toast.error('Please Enter valid username');\r\n                } else {\r\n                   \r\n                    if (resp.password === password) {\r\n                        toast.success('Login Success');\r\n                        usenavigate('/');  \r\n                    } else {\r\n                        toast.error('Please Enter valid credentials');\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Login Failed due to: ' + err.message);\r\n            });\r\n    };\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>You are logged in !</h1>\r\n                    <br />\r\n                    <p>\r\n                        <a href=\"http://localhost:3000/\">Go to Home</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                        \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Sign In</h1>\r\n                    <form onSubmit={ProceedLogin}>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            value={username}\r\n                            required\r\n                        />\r\n\r\n                        <label htmlFor=\"password\">password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                        />\r\n                        <button disabled={!username || !password  ? true : false}>Sign In</button>\r\n                    </form>\r\n                    <p>\r\n                        Need an account? <br />\r\n                        <span className=\"line\">\r\n                           \r\n                            <a href=\"http://localhost:3000/register\">Sign Up</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}