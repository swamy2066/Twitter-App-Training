{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  const usenavigate = useNavigate();\n  const ProceedLogin = async e => {\n    e.preventDefault();\n    let regobj = {\n      username,\n      password\n    }; // username is the email in your case\n    console.log(regobj);\n\n    // Use query parameters in the GET request\n    fetch(`http://localhost:5000/users?email=${username}&password=${password}`).then(res => res.json()) // Parse the JSON response\n    .then(resp => {\n      console.log(resp);\n\n      // Check if response object is empty or not\n      if (Object.keys(resp).length === 0) {\n        toast.error('Please enter a valid username or password');\n      } else {\n        // Validate the password (although you're already sending the password in the query)\n        if (resp.password === password) {\n          toast.success('Login successful');\n          usenavigate('/');\n        } else {\n          toast.error('Incorrect password');\n        }\n      }\n    }).catch(err => {\n      toast.error('Login failed due to: ' + err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ProceedLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUsername(e.target.value),\n        value: username,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !username || !password ? true : false,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/register\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }, this);\n};\n_s(Login, \"xccvRvrvdR7xSYTX5R0P+PjQfY4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useContext","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","Login","_s","userRef","errRef","username","setUsername","password","setPassword","errMsg","setErrMsg","success","setSuccess","usenavigate","ProceedLogin","e","preventDefault","regobj","console","log","fetch","then","res","json","resp","Object","keys","length","error","catch","err","message","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","autoComplete","onChange","target","value","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/Login.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst Login = () => {\r\n    \r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const usenavigate=useNavigate();\r\n\r\n\r\n    \r\n\r\n\r\n    const ProceedLogin = async (e) => {\r\n        e.preventDefault();\r\n        let regobj = { username, password }; // username is the email in your case\r\n        console.log(regobj);\r\n    \r\n        // Use query parameters in the GET request\r\n        fetch(`http://localhost:5000/users?email=${username}&password=${password}`)\r\n            .then((res) => res.json()) // Parse the JSON response\r\n            .then((resp) => {\r\n                console.log(resp);\r\n    \r\n                // Check if response object is empty or not\r\n                if (Object.keys(resp).length === 0) {\r\n                    toast.error('Please enter a valid username or password');\r\n                } else {\r\n                    // Validate the password (although you're already sending the password in the query)\r\n                    if (resp.password === password) {\r\n                        toast.success('Login successful');\r\n                        usenavigate('/');\r\n                    } else {\r\n                        toast.error('Incorrect password');\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Login failed due to: ' + err.message);\r\n            });\r\n    };\r\n    \r\n\r\n   \r\n    \r\n    \r\n\r\n\r\n    return (\r\n        \r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                        \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Sign In</h1>\r\n                    <form onSubmit={ProceedLogin}>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            value={username}\r\n                            required\r\n                        />\r\n\r\n                        <label htmlFor=\"password\">password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                        />\r\n                        <button disabled={!username || !password  ? true : false}>Sign In</button>\r\n                    </form>\r\n                    <p>\r\n                        Need an account? <br />\r\n                        <span className=\"line\">\r\n                           \r\n                            <a href=\"http://localhost:3000/register\">Sign Up</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            \r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}