{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000';\nfunction Post() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    description: '',\n    userId: '1'\n  });\n  const [editPost, setEditPost] = useState(null);\n  const [newComment, setNewComment] = useState({\n    text: '',\n    userId: '1'\n  });\n  const [selectedPost, setSelectedPost] = useState(null); // state to store selected post\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/posts`);\n        setPosts(response.data);\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/comments?postId=${postId}`);\n      setComments(response.data);\n    } catch (err) {\n      setError('Failed to fetch comments');\n      console.error(err);\n    }\n  };\n  const handleCreatePost = async () => {\n    const now = new Date().toISOString();\n    try {\n      const response = await axios.post(`${BASE_URL}/posts`, {\n        ...newPost,\n        createdAt: now,\n        updatedAt: now\n      });\n      setPosts([...posts, response.data]);\n      setNewPost({\n        title: '',\n        description: '',\n        userId: '1'\n      });\n    } catch (err) {\n      setError('Failed to create post');\n      console.error(err);\n    }\n  };\n  const handleUpdatePost = async () => {\n    if (!editPost) return;\n    const updatedPost = {\n      ...editPost,\n      updatedAt: new Date().toISOString()\n    };\n    try {\n      const response = await axios.put(`${BASE_URL}/posts/${editPost.id}`, updatedPost);\n      setPosts(posts.map(post => post.id === editPost.id ? response.data : post));\n      setEditPost(null);\n    } catch (err) {\n      setError('Failed to update post');\n      console.error(err);\n    }\n  };\n  const handleDeletePost = async postId => {\n    try {\n      await axios.delete(`${BASE_URL}/posts/${postId}`);\n      setPosts(posts.filter(post => post.id !== postId));\n    } catch (err) {\n      setError('Failed to delete post');\n      console.error(err);\n    }\n  };\n  const handleCreateComment = async postId => {\n    if (!newComment.text) {\n      setError('Comment is required');\n      return;\n    }\n    const now = new Date().toISOString();\n    try {\n      const response = await axios.post(`${BASE_URL}/comments?postId=${postId}`, {\n        ...newComment,\n        createdAt: now,\n        updatedAt: now\n      });\n      fetchComments(postId);\n      setNewComment({\n        text: '',\n        userId: '1'\n      });\n    } catch (err) {\n      setError('Failed to create comment');\n      console.error(err);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      await axios.delete(`${BASE_URL}/comments/${commentId}?postId=${postId}`);\n      fetchComments(postId);\n    } catch (err) {\n      setError('Failed to delete comment');\n      console.error(err);\n    }\n  };\n  const handlePostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editPost) {\n      setEditPost({\n        ...editPost,\n        [name]: value\n      });\n    } else {\n      setNewPost({\n        ...newPost,\n        [name]: value\n      });\n    }\n  };\n  const handleCommentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleViewComments = post => {\n    setSelectedPost(post);\n    fetchComments(post.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: newPost.title,\n        onChange: handlePostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newPost.description,\n        onChange: handlePostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), editPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: editPost.title,\n        onChange: handlePostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: editPost.description,\n        onChange: handlePostChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdatePost,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      cellSpacing: \"0\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(post.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(post.updatedAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditPost(post),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeletePost(post.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewComments(post),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          paddingRight: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Post Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 32\n            }, this), \" \", selectedPost.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 32\n            }, this), \" \", selectedPost.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 32\n            }, this), \" \", selectedPost.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Created At:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedPost.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Updated At:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedPost.updatedAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Created At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.userId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(comment.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteComment(selectedPost.id, comment.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this)]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            placeholder: \"Enter your comment\",\n            value: newComment.text,\n            onChange: handleCommentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCreateComment(selectedPost.id),\n            children: \"Create Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"goR4/LM8qnuP/DzjpNq0Or2zyzk=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BASE_URL","Post","_s","posts","setPosts","comments","setComments","error","setError","newPost","setNewPost","title","description","userId","editPost","setEditPost","newComment","setNewComment","text","selectedPost","setSelectedPost","fetchPosts","response","get","data","err","console","fetchComments","postId","handleCreatePost","now","Date","toISOString","post","createdAt","updatedAt","handleUpdatePost","updatedPost","put","id","map","handleDeletePost","delete","filter","handleCreateComment","handleDeleteComment","commentId","handlePostChange","e","name","value","target","handleCommentChange","prev","handleViewComments","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","border","cellPadding","cellSpacing","style","width","toLocaleString","display","marginTop","flex","paddingRight","comment","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\nfunction Post() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [newPost, setNewPost] = useState({\r\n        title: '', description: '', userId: '1'\r\n    });\r\n    const [editPost, setEditPost] = useState(null);\r\n    const [newComment, setNewComment] = useState({\r\n        text: '', userId: '1'\r\n    });\r\n    const [selectedPost, setSelectedPost] = useState(null); // state to store selected post\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get(`${BASE_URL}/posts`);\r\n                setPosts(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch posts');\r\n                console.error(err);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const fetchComments = async (postId) => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}/comments?postId=${postId}`);\r\n            setComments(response.data);\r\n        } catch (err) {\r\n            setError('Failed to fetch comments');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreatePost = async () => {\r\n        const now = new Date().toISOString();\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/posts`, {\r\n                ...newPost,\r\n                createdAt: now,\r\n                updatedAt: now,\r\n            });\r\n            setPosts([...posts, response.data]);\r\n            setNewPost({ title: '', description: '', userId: '1' });\r\n        } catch (err) {\r\n            setError('Failed to create post');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleUpdatePost = async () => {\r\n        if (!editPost) return;\r\n        const updatedPost = {\r\n            ...editPost,\r\n            updatedAt: new Date().toISOString(),\r\n        };\r\n        try {\r\n            const response = await axios.put(`${BASE_URL}/posts/${editPost.id}`, updatedPost);\r\n            setPosts(posts.map(post => post.id === editPost.id ? response.data : post));\r\n            setEditPost(null);\r\n        } catch (err) {\r\n            setError('Failed to update post');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleDeletePost = async (postId) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}/posts/${postId}`);\r\n            setPosts(posts.filter(post => post.id !== postId));\r\n        } catch (err) {\r\n            setError('Failed to delete post');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateComment = async (postId) => {\r\n        if (!newComment.text) {\r\n            setError('Comment is required');\r\n            return;\r\n        }\r\n        const now = new Date().toISOString();\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/comments?postId=${postId}`, {\r\n                ...newComment,\r\n                createdAt: now,\r\n                updatedAt: now,\r\n            });\r\n            fetchComments(postId);\r\n            setNewComment({ text: '', userId: '1' });\r\n        } catch (err) {\r\n            setError('Failed to create comment');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (postId, commentId) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}/comments/${commentId}?postId=${postId}`);\r\n            fetchComments(postId);\r\n        } catch (err) {\r\n            setError('Failed to delete comment');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handlePostChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (editPost) {\r\n            setEditPost({ ...editPost, [name]: value });\r\n        } else {\r\n            setNewPost({ ...newPost, [name]: value });\r\n        }\r\n    };\r\n\r\n    const handleCommentChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewComment(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleViewComments = (post) => {\r\n        setSelectedPost(post); \r\n        fetchComments(post.id); \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {error && <div>{error}</div>}\r\n\r\n            <div>\r\n                <h3>Create Post</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    value={newPost.title}\r\n                    onChange={handlePostChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    value={newPost.description}\r\n                    onChange={handlePostChange}\r\n                />\r\n                <button onClick={handleCreatePost}>Create</button>\r\n            </div>\r\n\r\n            {editPost && (\r\n                <div>\r\n                    <h3>Edit Post</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        value={editPost.title}\r\n                        onChange={handlePostChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={editPost.description}\r\n                        onChange={handlePostChange}\r\n                    />\r\n                    <button onClick={handleUpdatePost}>Update</button>\r\n                </div>\r\n            )}\r\n\r\n            {posts.length > 0 ? (\r\n                <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: '100%' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Title</th>\r\n                            <th>Description</th>\r\n                            <th>Created At</th>\r\n                            <th>Updated At</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {posts.map((post) => (\r\n                            <tr key={post.id}>\r\n                                <td>{post.id}</td>\r\n                                <td>{post.title}</td>\r\n                                <td>{post.description}</td>\r\n                                <td>{new Date(post.createdAt).toLocaleString()}</td>\r\n                                <td>{new Date(post.updatedAt).toLocaleString()}</td>\r\n                                <td>\r\n                                    <button onClick={() => setEditPost(post)}>Edit</button>\r\n                                    <button onClick={() => handleDeletePost(post.id)}>Delete</button>\r\n                                    <button onClick={() => handleViewComments(post)}>View Details</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <div>No posts available</div>\r\n            )}\r\n\r\n\r\n            {selectedPost && (\r\n                <div style={{ display: 'flex', marginTop: '20px' }}>\r\n                    <div style={{ flex: 1, paddingRight: '20px' }}>\r\n                        <h3>Post Details</h3>\r\n                        <div>\r\n                            <p><strong>ID:</strong> {selectedPost.id}</p>\r\n                            <p><strong>Title:</strong> {selectedPost.title}</p>\r\n                            <p><strong>Description:</strong> {selectedPost.description}</p>\r\n                            <p><strong>Created At:</strong> {new Date(selectedPost.createdAt).toLocaleString()}</p>\r\n                            <p><strong>Updated At:</strong> {new Date(selectedPost.updatedAt).toLocaleString()}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>Comments</h3>\r\n                        <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: '100%' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Comments</th>\r\n                                    <th>User ID</th>\r\n                                    <th>Created At</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {comments.map((comment) => (\r\n                                    <tr key={comment.id}>\r\n                                        <td>{comment.text}</td>\r\n                                        <td>{comment.userId}</td>\r\n                                        <td>{new Date(comment.createdAt).toLocaleString()}</td>\r\n                                        <td>\r\n                                            <button onClick={() => handleDeleteComment(selectedPost.id, comment.id)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div>\r\n                            <h3>Create Comment</h3>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"text\"\r\n                                placeholder=\"Enter your comment\"\r\n                                value={newComment.text}\r\n                                onChange={handleCommentChange}\r\n                            />\r\n                            <button onClick={() => handleCreateComment(selectedPost.id)}>Create Comment</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}