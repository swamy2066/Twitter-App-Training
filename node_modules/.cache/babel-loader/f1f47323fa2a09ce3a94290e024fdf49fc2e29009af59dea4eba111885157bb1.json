{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NarayanaSwamyTibiris\\\\my-app\\\\twitter-app\\\\src\\\\Components\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000';\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const id = 1;\n      try {\n        const response = await axios.get(`${BASE_URL}/posts/${id}`);\n        setPost(response.data);\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetail, \"jbdY+0elb52t2BCLnQMN6toF2L4=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","BASE_URL","PostDetail","_s","id","post","setPost","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","fetchPosts","response","get","data","err","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/NarayanaSwamyTibiris/my-app/twitter-app/src/Components/PostDetail.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            const id = 1;\r\n            try {\r\n                const response = await axios.get(`${BASE_URL}/posts/${id}`);\r\n                setPost(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch posts');\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAIxCC,SAAS,CAAC,MAAM;IACZ,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMX,EAAE,GAAG,CAAC;MACZ,IAAI;QACA,MAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGhB,QAAQ,UAAUG,EAAE,EAAE,CAAC;QAC3DE,OAAO,CAACU,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVL,QAAQ,CAAC,uBAAuB,CAAC;QACjCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACtB;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIf,OAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhCID,UAAU;EAAA,QACGJ,SAAS;AAAA;AAAA2B,EAAA,GADtBvB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}